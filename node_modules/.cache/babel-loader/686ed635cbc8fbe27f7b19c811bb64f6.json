{"ast":null,"code":"var _jsxFileName = \"/Users/ashikurrahman/Desktop/test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [count, dispatch] = useReducer(reducer, inititalState);\n  console.log(count);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2Ebnir3y40IfNTf5xdrRto8NkE0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ashikurrahman/Desktop/test/src/App.js"],"names":["React","useReducer","App","count","dispatch","reducer","inititalState","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,UAAU,CAACI,OAAD,EAAUC,aAAV,CAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,sBACE;AAAA,4BACE;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXD;;GAAMD,G;;KAAAA,G;AAaN,eAAeA,GAAf","sourcesContent":["import React, { useReducer } from \"react\";\n\nconst App = () => {\n  const [count, dispatch] = useReducer(reducer, inititalState);\n  console.log(count);\n  return (\n    <div>\n      <div>{count}</div>\n      <button> increment</button>\n      <button> decrement</button>\n      <button> reset</button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}